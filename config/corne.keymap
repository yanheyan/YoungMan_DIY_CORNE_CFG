/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        tp: tap_preferred {
            compatible = "zmk,behavior-hold-tap";
            label = "TAP_PREFERRED";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB       &kp Q  &kp W  &kp E      &kp R        &kp T           &kp Y    &kp U  &kp I          &kp O      &kp P       &kp BSPC
&kp CAPSLOCK  &kp A  &kp S  &kp D      &kp F        &kp G           &kp H    &kp J  &kp K          &kp L      &kp SEMI    &kp ENTER
&kp LSHFT     &kp Z  &kp X  &kp C      &kp V        &kp B           &kp B    &kp N  &kp M          &kp SLASH  &kp PERIOD  &to 1
                            &kp LCTRL  &lt 1 SPACE  &kp LEFT_ALT    &kp RET  &mo 2  &kp RIGHT_WIN
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp ESCAPE  &kp N1        &kp N2      &kp N3         &kp N4     &kp N5       &kp N6         &kp N7     &kp N8           &kp N9      &kp N0     &kp DEL
&kp LC(V)   &kp NUMBER_6  &kp N7      &kp N8         &kp N9     &kp N0       &kp MINUS      &kp EQUAL  &kp BSLH         &kp LBKT    &kp RBKT   &kp SLASH
&kp LC(Z)   &kp ENTER     &kp PERIOD  &kp BACKSPACE  &kp LEFT   &kp RIGHT    &kp SEMICOLON  &kp SQT    &kp COMMA        &kp PERIOD  &kp GRAVE  &to 2
                                      &kp UP         &kp LC(C)  &kp COLON    &kp RET        &mo 2      &kp RIGHT_SHIFT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp LC(C)  &kp F1   &kp F2   &kp F3     &kp F4  &kp F5       &kp HOME        &kp PG_UP     &kp UP      &kp PG_DN     &kp END     &kp DEL
&kp LC(V)  &kp F6   &kp F7   &kp F8     &kp F9  &kp F10      &none           &kp LEFT      &kp DOWN    &kp RIGHT     &none       &kp C_PLAY
&kp LSHFT  &kp F11  &kp F12  &kp C      &kp V   &none        &kp C_PREVIOUS  &kp C_VOL_DN  &kp K_MUTE  &kp C_VOL_UP  &kp K_NEXT  &to 3
                             &kp LCTRL  &mo 3   &kp SPACE    &kp RET         &trans        &kp RALT
            >;
        };

        layer_3 {
            bindings = <
&trans      &trans        &trans        &trans        &trans        &trans          &trans           &trans  &trans  &trans  &trans  &trans
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans           &trans  &trans  &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans          &kp LOCKING_NUM  &trans  &trans  &trans  &trans  &to 0
                                        &trans        &trans        &trans          &trans           &trans  &trans
            >;
        };
    };
};
